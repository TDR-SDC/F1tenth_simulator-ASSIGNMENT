<?xml version="1.0"?>

<!-- A simple model of the racecar for rviz -->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="racecar">

  <xacro:property name="wheelbase" value="0.3302" />
  <xacro:property name="width" value="0.2032" />
  <xacro:property name="height" value="0.1" />
  <xacro:property name="ground_offset" value="0.04" />
  <xacro:property name="wheel_radius" value="0.0508" />
  <xacro:property name="wheel_length" value="0.0381" />
  <xacro:property name="laser_distance_from_base_link" value="0.275" />
  <xacro:property name="laser_height" value="0.05" />
  <xacro:property name="laser_radius" value="0.026" />

  <material name="black">
    <color rgba="0.2 0.2 0.2 1."/>
  </material>

  <material name="blue">
    <color rgba="0.3 0.57 1. 1."/>
  </material>

  <link name="base_link">
    <visual>
      <origin xyz="${wheelbase/2} 0 ${ground_offset+height/2}"/>
      <geometry>
        <box size="${wheelbase} ${width} ${height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>

  <joint name="base_to_laser_model" type="fixed">
    <parent link="base_link"/>
    <child link="laser_model"/>
    <origin xyz="${laser_distance_from_base_link} 0 ${ground_offset+height+(laser_height/2)}"/>
  </joint>

  <link name="laser_model">
    <visual>
      <geometry>
        <cylinder radius="${laser_radius}" length="${laser_height}"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>

  <joint name="base_to_back_left_wheel" type="fixed">
    <parent link="base_link"/>
    <child link="back_left_wheel"/>
    <origin xyz="0 ${(wheel_length+width)/2} ${wheel_radius}"/>
  </joint>

  <link name="back_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name="black"/>
      <origin rpy="${pi/2} 0 0"/>
    </visual>
  </link>

  <joint name="base_to_back_right_wheel" type="fixed">
    <parent link="base_link"/>
    <child link="back_right_wheel"/>
    <origin xyz="0 ${-(wheel_length+width)/2} ${wheel_radius}"/>
  </joint>

  <link name="back_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name="black"/>
      <origin rpy="${pi/2} 0 0"/>
    </visual>
  </link>

  <joint name="base_to_front_left_hinge" type="fixed">
    <parent link="base_link"/>
    <child link="front_left_hinge"/>
    <origin xyz="${wheelbase} ${(wheel_length+width)/2} ${wheel_radius}"/>
  </joint>

  <link name="front_left_hinge"/>

  <joint name="front_left_hinge_to_wheel" type="continuous">
    <parent link="front_left_hinge"/>
    <child link="front_left_wheel"/>
  </joint>

  <link name="front_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name="black"/>
      <origin rpy="${pi/2} 0 0"/>
    </visual>
  </link>

  <joint name="base_to_front_right_hinge" type="fixed">
    <parent link="base_link"/>
    <child link="front_right_hinge"/>
    <origin xyz="${wheelbase} ${-(wheel_length+width)/2} ${wheel_radius}"/>
  </joint>

  <link name="front_right_hinge"/>

  <joint name="front_right_hinge_to_wheel" type="continuous">
    <parent link="front_right_hinge"/>
    <child link="front_right_wheel"/>
  </joint>

  <link name="front_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
      </geometry>
      <material name="black"/>
      <origin rpy="${pi/2} 0 0"/>
    </visual>
  </link>

  <link name="camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="${wheelbase/2} 0 ${ground_offset+height*2}" />
      <geometry>
        <box size="0.05 0.05 0.2" />
      </geometry>
      <material name="black"/>
    </visual>
  </link>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link" />
    <child link="camera_link" />
  </joint>

<gazebo reference="camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.396</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>mando/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
</gazebo>

</robot>
